{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }



	// PASTE THIS CODE IN YOUR IDE USER SNIPPETS

	"SNIPPET templates for .vue files": {
    "prefix": "template",
    "body": [
      "<template>",
			"  $1",
			"</template>",
			"",
      "<script setup lang=\"ts\"></script>",
			"",
      "<style></style>"
    ],
    "description": "Creates template, script and style for .vue files"
  },

	"SNIPPET scripts for .vue files": {
    "prefix": "script",
    "body": [
      "<script setup lang=\"ts\">",
			"  $1",
			"</script>"
    ],
    "description": "Creates script tag for .vue files"
  },

  "SNIPPET console log": {
    "prefix": "log",
    "body": [
      "console.log('$1');"
    ],
    "description": "Logs in the console"
  },

	"SNIPPET import statement": {
    "prefix": "import",
    "body": [
      "import ${1:{ ${2} \\}} from '${3}';"
    ],
    "description": "Creates custom import statement"
  },

	"SNIPPET arrow function": {
    "prefix": "arrow",
    "body": [
      "(${1})${2:} => ${3:{${4}\\}}"
    ],
    "description": "Creates an arrow function"
  },
	
}